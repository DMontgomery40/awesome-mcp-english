name: Build and Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_HOME: /Users/runner/.cargo
  CACHE_ON_FAILURE: false

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Check for Chinese Characters
      run: |
        chmod +x check_chinese.sh
        ./check_chinese.sh

    - name: Check File Encodings
      run: |
        find . -type f -exec file {} \; | grep -i "utf-16"
        if [ $? -eq 0 ]; then
          echo "Found UTF-16 encoded files"
          exit 1
        fi

    - name: Check Line Endings
      run: |
        find . -type f -exec file {} \; | grep -i "crlf"
        if [ $? -eq 0 ]; then
          echo "Found CRLF line endings"
          exit 1
        fi

    - name: Lint Markdown Files
      uses: DavidAnson/markdownlint-cli2-action@v9
      with:
        globs: "**/*.md"

    - name: Check Links
      uses: lycheeverse/lychee-action@v1.5.4
      with:
        args: --verbose --no-progress '**/*.md'

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Verify Scripts
      run: |
        chmod +x fix_permissions.command
        # Validate script syntax
        bash -n fix_permissions.command
        
    - name: Create DMG Structure
      run: |
        mkdir -p dmg_root
        cp fix_permissions.command dmg_root/
        
    - name: Create DMG
      run: |
        hdiutil create -volname "MCP Manager" -srcfolder dmg_root -ov -format UDZO mcp_manager.dmg
        
    - name: Upload DMG
      uses: actions/upload-artifact@v3
      with:
        name: MCP-Manager-macOS
        path: mcp_manager.dmg

  release:
    needs: [quality-checks, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: MCP-Manager-macOS
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: mcp_manager.dmg
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}